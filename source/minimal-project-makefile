# Makefile for minimal-project

# Site configuration
# ------------------
INSTALLDIR  = $(QINSTALLDIR)
ARCHITECTURE_PATH = $(QARCHITECTURE_PATH)
INSTALLLIB  = $(INSTALLDIR)/lib
INSTALLLIBA = $(INSTALLLIB)/$(ARCHITECTURE_PATH)
INSTALLBIN  = $(INSTALLDIR)/bin
INSTALLBINA = $(INSTALLBIN)/$(ARCHITECTURE_PATH)

RELEASE_VERSION = 0.1
RELEASE_FILE = minimal-project-$(RELEASE_VERSION)

TARGETS = minimal-application

all: error$(ERROR_OK) $(TARGETS)

# To add a new architecture, add architecture specific lines.
# The line prefix should be '#`architecture-path` ', see examples below.
port:
	-rm -rf $(ARCHITECTURE_PATH)
	mkdir $(ARCHITECTURE_PATH)
	cd $(ARCHITECTURE_PATH); csh -cf "ln -s ../*.{sc,c,h} ."
	$(MAKE) port-makefile

port-makefile:
	echo "# This file was generated automatically.  Do not edit." >\
		$(ARCHITECTURE_PATH)/makefile
	echo "# ----------------------------------------------------" >>\
		$(ARCHITECTURE_PATH)/makefile
	echo ARCHITECTURE_PATH = $(ARCHITECTURE_PATH) >>\
		$(ARCHITECTURE_PATH)/makefile
	echo ERROR_OK = _no_error >> $(ARCHITECTURE_PATH)/makefile
	grep "^#$(ARCHITECTURE_PATH)" makefile | \
		sed "s/#$(ARCHITECTURE_PATH) //" >>\
			$(ARCHITECTURE_PATH)/makefile
	echo include ../makefile >> $(ARCHITECTURE_PATH)/makefile

error:
	@echo "Do 'make port' to create an architecture specific directory."
	@exit 1

error_no_error:

# Architecture specific variables
# -------------------------------
#sun4-SunOS-4.1.3 CC = gcc
#sun4-SunOS-4.1.3 CFLAGS = -O2
#sun4-SunOS-4.1.3 SCCFLAGS = -O2
#sun4-SunOS-4.1.3 SCCLDFLAGS =
#sun4-SunOS-4.1.3 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#sun4-SunOS-4.1.3       minimal-projectlib-*.o -L/usr/openwin/lib -lX11 -lm

#sun4m-SunOS-5.4 CC = gcc
#sun4m-SunOS-5.4 CFLAGS = -O2
#sun4m-SunOS-5.4 SCCFLAGS = -O2
#sun4m-SunOS-5.4 SCCLDFLAGS =
#sun4m-SunOS-5.4 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#sun4m-SunOS-5.4       minimal-projectlib-*.o\
#sun4m-SunOS-5.4       -L/usr/openwin/lib -R/usr/openwin/lib -lX11\
#sun4m-SunOS-5.4       -L/usr/ucblib -R/usr/ucblib -lucb -lm

#sun4m-SunOS-5.5 CC = gcc
#sun4m-SunOS-5.5 CFLAGS = -O2
#sun4m-SunOS-5.5 SCCFLAGS = -O2
#sun4m-SunOS-5.5 SCCLDFLAGS =
#sun4m-SunOS-5.5 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#sun4m-SunOS-5.5       minimal-projectlib-*.o\
#sun4m-SunOS-5.5       -L/usr/openwin/lib -R/usr/openwin/lib -lX11\
#sun4m-SunOS-5.5       -L/usr/ucblib -R/usr/ucblib -lucb -lm

#sun4u-SunOS-5.6 CC = gcc
#sun4u-SunOS-5.6 CFLAGS = -O2
#sun4u-SunOS-5.6 SCCFLAGS = -O2
#sun4u-SunOS-5.6 SCCLDFLAGS =
#sun4u-SunOS-5.6 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#sun4u-SunOS-5.6       minimal-projectlib-*.o\
#sun4u-SunOS-5.6       -L/usr/openwin/lib -R/usr/openwin/lib -lX11\
#sun4u-SunOS-5.6       -L/usr/ucblib -R/usr/ucblib -lucb -lm

#i586-Linux-2.0.0 CC = gcc
#i586-Linux-2.0.0 CFLAGS = -O2 -DLINUX
#i586-Linux-2.0.0 SCCFLAGS = -O2
#i586-Linux-2.0.0 SCCLDFLAGS =
#i586-Linux-2.0.0 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#i586-Linux-2.0.0       minimal-projectlib-*.o -L/usr/X11/lib -lX11 -lm

#i586-Linux-2.0.34 CC = egcs
#i586-Linux-2.0.34 CFLAGS = -O2 -DLINUX
#i586-Linux-2.0.34 SCCFLAGS = -O2
#i586-Linux-2.0.34 SCCLDFLAGS =
#i586-Linux-2.0.34 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#i586-Linux-2.0.34       minimal-projectlib-*.o -L/usr/X11/lib -lX11 -lm

#i586-Linux-2.0.35 CC = egcs
#i586-Linux-2.0.35 CFLAGS = -O2 -DLINUX
#i586-Linux-2.0.35 SCCFLAGS = -O2
#i586-Linux-2.0.35 SCCLDFLAGS =
#i586-Linux-2.0.35 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#i586-Linux-2.0.35       minimal-projectlib-*.o -L/usr/X11/lib -lX11 -lm

#i686-Linux-2.0.18 CC = gcc
#i686-Linux-2.0.18 CFLAGS = -O2 -DLINUX
#i686-Linux-2.0.18 SCCFLAGS = -O2
#i686-Linux-2.0.18 SCCLDFLAGS =
#i686-Linux-2.0.18 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#i686-Linux-2.0.18       minimal-projectlib-*.o -L/usr/X11/lib -lX11 -lm

#i686-Linux-2.0.27 CC = gcc
#i686-Linux-2.0.27 CFLAGS = -O2 -DLINUX
#i686-Linux-2.0.27 SCCFLAGS = -O2
#i686-Linux-2.0.27 SCCLDFLAGS =
#i686-Linux-2.0.27 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#i686-Linux-2.0.27       minimal-projectlib-*.o -L/usr/X11/lib -lX11 -lm

#i686-Linux-2.0.30 CC = gcc
#i686-Linux-2.0.30 CFLAGS = -O2 -DLINUX
#i686-Linux-2.0.30 SCCFLAGS = -O2
#i686-Linux-2.0.30 SCCLDFLAGS =
#i686-Linux-2.0.30 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#i686-Linux-2.0.30       minimal-projectlib-*.o -L/usr/X11/lib -lX11 -lm

#i686-Linux-2.0.32 CC = gcc
#i686-Linux-2.0.32 CFLAGS = -O2 -DLINUX
#i686-Linux-2.0.32 SCCFLAGS = -O2
#i686-Linux-2.0.32 SCCLDFLAGS =
#i686-Linux-2.0.32 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#i686-Linux-2.0.32       minimal-projectlib-*.o -L/usr/X11/lib -lX11 -lm

#i686-Linux-2.0.33 CC = gcc
#i686-Linux-2.0.33 CFLAGS = -O2 -DLINUX
#i686-Linux-2.0.33 SCCFLAGS = -O2
#i686-Linux-2.0.33 SCCLDFLAGS =
#i686-Linux-2.0.33 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#i686-Linux-2.0.33       minimal-projectlib-*.o -L/usr/X11/lib -lX11 -lm

#i686-Linux-2.0.34 CC = egcs
#i686-Linux-2.0.34 CFLAGS = -O2 -DLINUX
#i686-Linux-2.0.34 SCCFLAGS = -O2
#i686-Linux-2.0.34 SCCLDFLAGS =
#i686-Linux-2.0.34 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#i686-Linux-2.0.34       minimal-projectlib-*.o -L/usr/X11/lib -lX11 -lm

#i686-Linux-2.0.35 CC = egcs
#i686-Linux-2.0.35 CFLAGS = -O2 -DLINUX
#i686-Linux-2.0.35 SCCFLAGS = -O2
#i686-Linux-2.0.35 SCCLDFLAGS =
#i686-Linux-2.0.35 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#i686-Linux-2.0.35       minimal-projectlib-*.o -L/usr/X11/lib -lX11 -lm

#i686-Linux-2.2.1 CC = egcs
#i686-Linux-2.2.1 CFLAGS = -O2 -DLINUX
#i686-Linux-2.2.1 SCCFLAGS = -O2
#i686-Linux-2.2.1 SCCLDFLAGS =
#i686-Linux-2.2.1 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#i686-Linux-2.2.1       minimal-projectlib-*.o -L/usr/X11/lib -lX11 -lm

#i686-Linux-2.2.5 CC = egcs
#i686-Linux-2.2.5 CFLAGS = -O2 -DLINUX
#i686-Linux-2.2.5 SCCFLAGS = -O2
#i686-Linux-2.2.5 SCCLDFLAGS =
#i686-Linux-2.2.5 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#i686-Linux-2.2.5       minimal-projectlib-*.o -L/usr/X11/lib -lX11 -lm

#i686-Linux-2.2.5-15 CC = egcs
#i686-Linux-2.2.5-15 CFLAGS = -O2 -DLINUX
#i686-Linux-2.2.5-15 SCCFLAGS = -O2
#i686-Linux-2.2.5-15 SCCLDFLAGS =
#i686-Linux-2.2.5-15 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#i686-Linux-2.2.5-15       minimal-projectlib-*.o -L/usr/X11R6/lib -lX11 -lm

#i686-Linux-2.2.10 CC = egcs
#i686-Linux-2.2.10 CFLAGS = -O2 -DLINUX
#i686-Linux-2.2.10 SCCFLAGS = -O2
#i686-Linux-2.2.10 SCCLDFLAGS =
#i686-Linux-2.2.10 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#i686-Linux-2.2.10       minimal-projectlib-*.o -L/usr/X11R6/lib -lX11 -lm

#i686-Linux-2.2.12-20 CC = egcs
#i686-Linux-2.2.12-20 CFLAGS = -O2 -DLINUX
#i686-Linux-2.2.12-20 SCCFLAGS = -O2
#i686-Linux-2.2.12-20 SCCLDFLAGS =
#i686-Linux-2.2.12-20 LRL = $(INSTALLLIBA)/QobiScheme.a\
#i686-Linux-2.2.12-20       $(INSTALLLIBA)/scxl.a\
#i686-Linux-2.2.12-20       minimal-projectlib-*.o\
#i686-Linux-2.2.12-20       -L/usr/X11R6/lib -lX11 -lm

#i686-Linux-2.2.12-20smp CC = egcs
#i686-Linux-2.2.12-20smp CFLAGS = -O2 -DLINUX
#i686-Linux-2.2.12-20smp SCCFLAGS = -O2
#i686-Linux-2.2.12-20smp SCCLDFLAGS =
#i686-Linux-2.2.12-20smp LRL = $(INSTALLLIBA)/QobiScheme.a\
#i686-Linux-2.2.12-20smp       $(INSTALLLIBA)/scxl.a\
#i686-Linux-2.2.12-20smp       minimal-projectlib-*.o\
#i686-Linux-2.2.12-20smp       -L/usr/X11R6/lib -lX11 -lm

#i686-Linux-2.3.42 CC = egcs
#i686-Linux-2.3.42 CFLAGS = -O2 -DLINUX
#i686-Linux-2.3.42 SCCFLAGS = -O2
#i686-Linux-2.3.42 SCCLDFLAGS =
#i686-Linux-2.3.42 LRL = $(INSTALLLIBA)/QobiScheme.a\
#i686-Linux-2.3.42       $(INSTALLLIBA)/scxl.a\
#i686-Linux-2.3.42       minimal-projectlib-*.o\
#i686-Linux-2.3.42       -L/usr/X11R6/lib -lX11 -lm

#alpha-OSF1-V3.2 CC = cc
#alpha-OSF1-V3.2 CFLAGS = -O4 -migrate -ieee_with_no_inexact
#alpha-OSF1-V3.2 SCCFLAGS = -migrate -ieee_with_no_inexact
#alpha-OSF1-V3.2 SCCLDFLAGS = -migrate
#alpha-OSF1-V3.2 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#alpha-OSF1-V3.2       minimal-projectlib-*.o -lX11 -lm

#alpha-OSF1-V4.0 CC = cc
#alpha-OSF1-V4.0 CFLAGS = -O4 -migrate -ieee_with_no_inexact
#alpha-OSF1-V4.0 SCCFLAGS = -migrate -ieee_with_no_inexact
#alpha-OSF1-V4.0 SCCLDFLAGS = -migrate
#alpha-OSF1-V4.0 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#alpha-OSF1-V4.0       minimal-projectlib-*.o -lX11 -lm

#IP7-IRIX-4.0.5 CC = gcc
#IP7-IRIX-4.0.5 CFLAGS = -O2
#IP7-IRIX-4.0.5 SCCFLAGS = -O2
#IP7-IRIX-4.0.5 SCCLDFLAGS =
#IP7-IRIX-4.0.5 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#IP7-IRIX-4.0.5       minimal-projectlib-*.o -lX11 -lm

#IP12-IRIX-4.0.5 CC = gcc
#IP12-IRIX-4.0.5 CFLAGS = -O2
#IP12-IRIX-4.0.5 SCCFLAGS = -O2
#IP12-IRIX-4.0.5 SCCLDFLAGS =
#IP12-IRIX-4.0.5 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#IP12-IRIX-4.0.5       minimal-projectlib-*.o -lX11 -lm

#IP22-IRIX-5.3 CC = cc
#IP22-IRIX-5.3 CFLAGS = -O2 -non_shared
#IP22-IRIX-5.3 SCCFLAGS = -O2 -non_shared
#IP22-IRIX-5.3 SCCLDFLAGS = -non_shared
#IP22-IRIX-5.3 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#IP22-IRIX-5.3       $(INSTALLLIBA)/libX11.a minimal-projectlib-*.o -lm

#IP25-IRIX64-6.2 CC = cc
#IP25-IRIX64-6.2 CFLAGS = -O2 -non_shared
#IP25-IRIX64-6.2 SCCFLAGS = -O2 -non_shared
#IP25-IRIX64-6.2 SCCLDFLAGS = -non_shared
#IP25-IRIX64-6.2 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#IP25-IRIX64-6.2       $(INSTALLLIBA)/libX11.a minimal-projectlib-*.o -lm

#IP28-IRIX64-6.2 CC = cc
#IP28-IRIX64-6.2 CFLAGS = -O2 -non_shared
#IP28-IRIX64-6.2 SCCFLAGS = -O2 -non_shared
#IP28-IRIX64-6.2 SCCLDFLAGS = -non_shared
#IP28-IRIX64-6.2 LRL = $(INSTALLLIBA)/QobiScheme.a $(INSTALLLIBA)/scxl.a\
#IP28-IRIX64-6.2       $(INSTALLLIBA)/libX11.a minimal-projectlib-*.o -lm

arc:
	-csh -cf "rm -rf ../archive/`archive-date`"
	csh -cf "mkdir ../archive/`archive-date`"
	-csh -cf "cp makefile *.{sc,c,h} ../archive/`archive-date`/."

clean:
	-rm -f *.o core a.out

real-clean: clean
	-rm -f $(TARGETS)

install: all
	cp $(TARGETS) $(INSTALLBINA)/.

uninstall:
	cd $(INSTALLBINA); rm -rf $(TARGETS)

release:
	-rm -rf $(RELEASE_FILE) $(RELEASE_FILE).tar*
	mkdir $(RELEASE_FILE)
	cp makefile *.{sc,c,h} $(RELEASE_FILE)/.
	tar cvf $(RELEASE_FILE).tar ./$(RELEASE_FILE)
	compress $(RELEASE_FILE).tar
	-rm -rf $(RELEASE_FILE)
	mv $(RELEASE_FILE).tar.Z ../releases/.

publish: release
	cd ..; publish minimal-project $(RELEASE_VERSION)

# Compilation rules and dependencies
# ----------------------------------
minimal-projectlib = minimal-projectlib-component.o

minimal-projectlib-component.sch: minimal-projectlib-*.sc
	sch minimal-projectlib-component minimal-projectlib-*.sc

minimal-projectlib-component.o: minimal-projectlib-component.sch\
minimal-projectlib-component.sc
	scc -cc $(CC) $(SCCFLAGS) -c minimal-projectlib-component.sc
	-rm -f minimal-projectlib-component.c

minimal-application.sch: minimal-application.sc minimal-projectlib-*.sc
	sch -main minimal-application minimal-projectlib-*.sc

minimal-application.o: minimal-application.sch minimal-application.sc
	scc -cc $(CC) $(SCCFLAGS) -c minimal-application.sc
	-rm -f minimal-application.c

minimal-application: minimal-application.o $(minimal-projectlib)
	scc -cc $(CC) $(SCCLDFLAGS) -o minimal-application\
            minimal-application.o $(LRL)
